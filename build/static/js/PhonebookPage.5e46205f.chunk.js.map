{"version":3,"file":"static/js/PhonebookPage.5e46205f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","redux/phonebook/phonebook-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://goit-react-hw-08-phonebook/./src/components/ItemContact/ItemContact.module.css?6cb8","components/ItemContact/ItemContact.jsx","components/ContactsList/ContactsList.jsx","pages/PhonebookPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Form_title__zy787\",\"wrapper\":\"Form_wrapper__Gnd-H\",\"label\":\"Form_label__eIUgX\",\"input\":\"Form_input__tnh5F\",\"btn__wrapper\":\"Form_btn__wrapper__Jp3IQ\"};","import React, { useReducer } from 'react';\r\nimport s from './Form.module.css';\r\nimport shortid from 'shortid';\r\n\r\nimport {\r\n  useAddContactMutation,\r\n  useLazyFetchContactsQuery,\r\n} from 'redux/auth/authApi';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'name':\r\n      return { ...state, name: action.payload };\r\n    case 'number':\r\n      return { ...state, number: action.payload };\r\n    case 'reset':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Form = () => {\r\n  const [state, dispatch] = useReducer(formReducer, initialState);\r\n  const nameInputId = shortid.generate();\r\n  const phoneInputId = shortid.generate();\r\n\r\n  const [addContact, { isLoading, isError }] = useAddContactMutation();\r\n\r\n  // const {\r\n  //   data: contacts = [],\r\n  //   error: errorform,\r\n  //   isError: isErrorForm,\r\n  //   isLoading: isloadingForm,\r\n  // } = useLazyFetchContactsQuery('', {\r\n  //   refetchOnFocus: true,\r\n  // });\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    dispatch({ type: name, payload: value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(state);\r\n    dispatch({ type: 'reset' });\r\n  };\r\n\r\n  const onSubmit = state => {\r\n    addContact(state);\r\n\r\n    // toast.error(\r\n    //   `${ableToAddName ? state.name : state.number} is already in contacts`\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <form onSubmit={handleSubmit} className={s.wrapper}>\r\n        <label htmlFor={nameInputId} className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={state.name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          className={s.input}\r\n        />\r\n        <label htmlFor={phoneInputId} className={s.label}>\r\n          Phone number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={state.number}\r\n          onChange={handleChange}\r\n          id={phoneInputId}\r\n          className={s.input}\r\n        />\r\n        <div className={s.btn__wrapper}>\r\n          <Button title=\"Add contact\" type=\"submit\" />\r\n        </div>\r\n      </form>\r\n      <ToastContainer autoClose={2000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export const getFilterContact = state => state.filterContact;\r\n\r\n// Для компонента ContactList сложный селектор\r\nexport const getVisibleContacts = (state, contacts) => {\r\n  if (!contacts) {\r\n    return [];\r\n  }\r\n  const filterContact = getFilterContact(state);\r\n  if (!filterContact) {\r\n    return contacts;\r\n  }\r\n  const normWord = filterContact.toLocaleLowerCase().trim();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(normWord)\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__BoSiv\",\"wrapper\":\"Filter_wrapper__O4LZP\",\"label\":\"Filter_label__77CeJ\",\"input\":\"Filter_input__Hnx1L\"};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilterContact } from 'redux/phonebook/phonebook-selectors';\r\nimport s from './Filter.module.css';\r\nimport { myActionFilterContact } from 'redux/phonebook/phonebook-reducer';\r\n\r\nconst Filter = () => {\r\n  const filterContact = useSelector(state => getFilterContact(state));\r\n  const dispatch = useDispatch();\r\n  const onChangeFilter = e => dispatch(myActionFilterContact(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Contacts</h1>\r\n      <div className={s.wrapper}>\r\n        <label className={s.label}>Find contacts by name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          className={s.input}\r\n          value={filterContact}\r\n          onChange={onChangeFilter}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__xH2Jb\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ItemContact_item__3Pajy\",\"text\":\"ItemContact_text__nOrvr\",\"btn\":\"ItemContact_btn__j-AHs\",\"foo\":\"ItemContact_foo__HsxMx\"};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport s from './ItemContact.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useDeleteContactMutation } from 'redux/auth/authApi';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport { resetFilter } from 'redux/phonebook/phonebook-reducer';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst ItemContact = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n  const onResetFilter = () => dispatch(resetFilter());\r\n  const [\r\n    deleteContact,\r\n    { isLoading: isLoadingBtn },\r\n  ] = useDeleteContactMutation();\r\n\r\n  const onDeleteContact = e => {\r\n    deleteContact(e.target.id);\r\n    toast.warn(`Contact ${contact.name} deleted`);\r\n\r\n    onResetFilter();\r\n  };\r\n  return (\r\n    <li className={s.item} id={contact.id}>\r\n      <p className={s.text}>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <Button\r\n        isActive={!isLoadingBtn}\r\n        title=\"Delete\"\r\n        onClick={onDeleteContact}\r\n        id={contact.id}\r\n      />\r\n      <ToastContainer autoClose={2000} />\r\n    </li>\r\n  );\r\n};\r\nItemContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ItemContact;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/phonebook/phonebook-selectors';\r\n\r\nimport s from './ContactsList.module.css';\r\nimport { useFetchContactsQuery } from 'redux/auth/authApi';\r\n\r\nimport ItemContact from 'components/ItemContact/ItemContact';\r\nimport Loader from 'components/Loader/Loader';\r\nimport { getIsLogged } from 'redux/auth/token-selectors';\r\n\r\nconst ContactsList = () => {\r\n  const isLogged = useSelector(getIsLogged);\r\n  const {\r\n    data,\r\n    error,\r\n    isError,\r\n    isLoading,\r\n    isFetching,\r\n  } = useFetchContactsQuery(null, { skip: !isLogged });\r\n  // const [\r\n  //   fetchContacts,\r\n  //   { data, error, isError, isLoading, isFetching },\r\n  // ] = useLazyFetchContactsQuery();\r\n\r\n  // useEffect(() => {\r\n  //   if (isLogged) {\r\n  //     fetchContacts();\r\n  //   }\r\n  // }, [isLogged]);\r\n\r\n  console.log('data', data);\r\n  console.log('isError', isError);\r\n  console.log('error', error);\r\n  console.log('isLoading', isLoading);\r\n  console.log('isFetching', isFetching);\r\n\r\n  const contacts = useSelector(state => getVisibleContacts(state, data));\r\n  console.log(contacts);\r\n  const shouContacts = contacts?.length === 0 || error?.status === 404;\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {isError && error?.status !== 404 && <p>Somthing wrong</p>}\r\n      {shouContacts ? (\r\n        <p>There are no contacts in the phonebook</p>\r\n      ) : (\r\n        <ul className={s.list}>\r\n          {contacts?.length > 0\r\n            ? contacts.map(contact => (\r\n                <ItemContact key={contact.id} contact={contact} />\r\n              ))\r\n            : ''}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport Form from 'components/Form/Form';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactsList from 'components/ContactsList/ContactsList';\r\nimport Container from 'components/Container/Container';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PhonebookPage = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form />\r\n      </Container>\r\n      <Container>\r\n        <Filter />\r\n      </Container>\r\n      <Container>\r\n        <ContactsList />\r\n      </Container>\r\n      <ToastContainer autoClose={2000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n"],"names":["initialState","name","number","formReducer","state","action","type","payload","useReducer","dispatch","nameInputId","shortid","phoneInputId","useAddContactMutation","addContact","handleChange","isLoading","isError","event","target","value","onSubmit","className","s","e","preventDefault","htmlFor","pattern","title","required","onChange","id","Button","autoClose","getFilterContact","filterContact","useSelector","useDispatch","myActionFilterContact","contact","useDeleteContactMutation","deleteContact","isLoadingBtn","isActive","onClick","toast","resetFilter","isLogged","getIsLogged","useFetchContactsQuery","skip","data","error","isFetching","console","log","contacts","normWord","toLocaleLowerCase","trim","filter","includes","getVisibleContacts","shouContacts","length","status","Loader","map","Container"],"sourceRoot":""}