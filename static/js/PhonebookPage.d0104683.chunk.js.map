{"version":3,"file":"static/js/PhonebookPage.d0104683.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","redux/phonebook/phonebook-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://goit-react-hw-08-phonebook/./src/components/ItemContact/ItemContact.module.css?6cb8","components/ItemContact/ItemContact.jsx","components/ContactsList/ContactsList.jsx","pages/PhonebookPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Form_title__zy787\",\"wrapper\":\"Form_wrapper__Gnd-H\",\"label\":\"Form_label__eIUgX\",\"input\":\"Form_input__tnh5F\",\"btn__wrapper\":\"Form_btn__wrapper__Jp3IQ\"};","import React, { useReducer, useEffect } from 'react';\r\nimport s from './Form.module.css';\r\nimport shortid from 'shortid';\r\n\r\nimport {\r\n  useAddContactMutation,\r\n  useLazyFetchContactsQuery,\r\n  useFetchContactsQuery,\r\n} from 'redux/auth/authApi';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'name':\r\n      return { ...state, name: action.payload };\r\n    case 'number':\r\n      return { ...state, number: action.payload };\r\n    case 'reset':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Form = () => {\r\n  const [state, dispatch] = useReducer(formReducer, initialState);\r\n  const nameInputId = shortid.generate();\r\n  const phoneInputId = shortid.generate();\r\n\r\n  const [addContact, { isLoading, isError }] = useAddContactMutation();\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    dispatch({ type: name, payload: value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(state);\r\n    dispatch({ type: 'reset' });\r\n  };\r\n\r\n  const {\r\n    fetchContacts,\r\n    data: contacts,\r\n    error: errorFetch,\r\n    isError: isErrorFetch,\r\n    isLoading: isLoadingFetch,\r\n    isFetching,\r\n  } = useFetchContactsQuery();\r\n\r\n  // useEffect(() => {\r\n  //   fetchContacts().unwrap();\r\n  // }, [fetchContacts]);\r\n\r\n  const onSubmit = async state => {\r\n    const normalizedName = state.name\r\n      .toLocaleLowerCase()\r\n      .split(' ')\r\n      .join('');\r\n    const ableToAddName = contacts?.some(\r\n      contact =>\r\n        contact.name\r\n          .toLocaleLowerCase()\r\n          .split(' ')\r\n          .join('') === normalizedName\r\n    );\r\n    const normalizedNumber = state.number.split('-').join('');\r\n    const ableToAddNumber = contacts?.some(\r\n      contact => contact.number.split('-').join('') === normalizedNumber\r\n    );\r\n    if (ableToAddName || ableToAddNumber) {\r\n      toast.error(\r\n        `${ableToAddName ? state.name : state.number} is already in contacts`\r\n      );\r\n      return;\r\n    }\r\n    try {\r\n      await addContact(state);\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\r\n        `Something went wrong while adding a contact, try changing the name or number.`\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <form onSubmit={handleSubmit} className={s.wrapper}>\r\n        <label htmlFor={nameInputId} className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={state.name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          className={s.input}\r\n        />\r\n        <label htmlFor={phoneInputId} className={s.label}>\r\n          Phone number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={state.number}\r\n          onChange={handleChange}\r\n          id={phoneInputId}\r\n          className={s.input}\r\n        />\r\n        <div className={s.btn__wrapper}>\r\n          <Button title=\"Add contact\" type=\"submit\" />\r\n        </div>\r\n      </form>\r\n      <ToastContainer autoClose={2000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export const getFilterContact = state => state.filterContact;\r\n\r\n// Для компонента ContactList сложный селектор\r\nexport const getVisibleContacts = (state, contacts) => {\r\n  if (!contacts) {\r\n    return [];\r\n  }\r\n  const filterContact = getFilterContact(state);\r\n  if (!filterContact) {\r\n    return contacts;\r\n  }\r\n  const normWord = filterContact.toLocaleLowerCase().trim();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(normWord)\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__BoSiv\",\"wrapper\":\"Filter_wrapper__O4LZP\",\"label\":\"Filter_label__77CeJ\",\"input\":\"Filter_input__Hnx1L\"};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilterContact } from 'redux/phonebook/phonebook-selectors';\r\nimport s from './Filter.module.css';\r\nimport { myActionFilterContact } from 'redux/phonebook/phonebook-reducer';\r\n\r\nconst Filter = () => {\r\n  const filterContact = useSelector(state => getFilterContact(state));\r\n  const dispatch = useDispatch();\r\n  const onChangeFilter = e => dispatch(myActionFilterContact(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Contacts</h1>\r\n      <div className={s.wrapper}>\r\n        <label className={s.label}>Find contacts by name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          className={s.input}\r\n          value={filterContact}\r\n          onChange={onChangeFilter}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__xH2Jb\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ItemContact_item__3Pajy\",\"text\":\"ItemContact_text__nOrvr\",\"btn\":\"ItemContact_btn__j-AHs\",\"foo\":\"ItemContact_foo__HsxMx\"};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport s from './ItemContact.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { useDeleteContactMutation } from 'redux/auth/authApi';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport { resetFilter } from 'redux/phonebook/phonebook-reducer';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst ItemContact = ({ contact }) => {\r\n  const dispatch = useDispatch();\r\n  const onResetFilter = () => dispatch(resetFilter());\r\n  const [\r\n    deleteContact,\r\n    { isLoading: isLoadingBtn },\r\n  ] = useDeleteContactMutation();\r\n\r\n  const onDeleteContact = e => {\r\n    deleteContact(e.target.id);\r\n    toast.warn(`Contact ${contact.name} deleted`);\r\n\r\n    onResetFilter();\r\n  };\r\n  return (\r\n    <li className={s.item} id={contact.id}>\r\n      <p className={s.text}>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <Button\r\n        isActive={!isLoadingBtn}\r\n        title=\"Delete\"\r\n        onClick={onDeleteContact}\r\n        id={contact.id}\r\n      />\r\n      <ToastContainer autoClose={2000} />\r\n    </li>\r\n  );\r\n};\r\nItemContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ItemContact;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/phonebook/phonebook-selectors';\r\n\r\nimport s from './ContactsList.module.css';\r\nimport { useFetchContactsQuery } from 'redux/auth/authApi';\r\n\r\nimport ItemContact from 'components/ItemContact/ItemContact';\r\nimport Loader from 'components/Loader/Loader';\r\nimport { getIsLogged } from 'redux/auth/token-selectors';\r\n\r\nconst ContactsList = () => {\r\n  const isLogged = useSelector(getIsLogged);\r\n  const {\r\n    data,\r\n    error,\r\n    isError,\r\n    isLoading,\r\n    isFetching,\r\n  } = useFetchContactsQuery(null, { skip: !isLogged });\r\n\r\n  const contacts = useSelector(state => getVisibleContacts(state, data));\r\n\r\n  const shouContacts = contacts?.length === 0 || error?.status === 404;\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {isError && error?.status !== 404 && <p>Somthing wrong</p>}\r\n      {shouContacts ? (\r\n        <p>There are no contacts in the phonebook</p>\r\n      ) : (\r\n        <ul className={s.list}>\r\n          {contacts?.length > 0\r\n            ? contacts.map(contact => (\r\n                <ItemContact key={contact.id} contact={contact} />\r\n              ))\r\n            : ''}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport Form from 'components/Form/Form';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactsList from 'components/ContactsList/ContactsList';\r\nimport Container from 'components/Container/Container';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst PhonebookPage = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form />\r\n      </Container>\r\n      <Container>\r\n        <Filter />\r\n      </Container>\r\n      <Container>\r\n        <ContactsList />\r\n      </Container>\r\n      <ToastContainer autoClose={2000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhonebookPage;\r\n"],"names":["initialState","name","number","formReducer","state","action","type","payload","useReducer","dispatch","nameInputId","shortid","phoneInputId","useAddContactMutation","addContact","handleChange","isLoading","isError","event","target","value","useFetchContactsQuery","contacts","fetchContacts","data","onSubmit","error","isFetching","normalizedName","toLocaleLowerCase","split","join","ableToAddName","some","contact","normalizedNumber","ableToAddNumber","toast","console","log","className","s","e","preventDefault","htmlFor","pattern","title","required","onChange","id","Button","autoClose","getFilterContact","filterContact","useSelector","useDispatch","myActionFilterContact","useDeleteContactMutation","deleteContact","isLoadingBtn","isActive","onClick","resetFilter","isLogged","getIsLogged","skip","normWord","trim","filter","includes","getVisibleContacts","shouContacts","length","status","Loader","map","Container"],"sourceRoot":""}