{"version":3,"file":"static/js/LoginPage.d455a00d.chunk.js","mappings":"+OACA,EAAwB,yBAAxB,EAA2D,2BAA3D,EAA8F,yBAA9F,EAA+H,yBAA/H,EAAuK,gC,8ECYjKA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAENC,EAAkB,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACxD,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,kBAAKF,GAAZ,IAAmBH,MAAOI,EAAOE,UACnC,IAAK,WACH,OAAO,kBAAKH,GAAZ,IAAmBF,SAAUG,EAAOE,UACtC,IAAK,QACH,OAAOP,EACT,QACE,OAAOI,IAuFb,EAnFkB,WAChB,OAA0BI,EAAAA,EAAAA,YAAWL,EAAiBH,GAAtD,eAAOI,EAAP,KAAcK,EAAd,KAEMC,EAAeC,IAAAA,WACfC,EAAkBD,IAAAA,WAExB,IADiBE,EAAAA,EAAAA,OAIbC,EAAAA,EAAAA,OAHJ,eACEC,EADF,YAEIC,EAFJ,EAEIA,KAGEC,GALN,EAEUC,UAFV,EAE0CC,SAGpBC,EAAAA,EAAAA,OAGhBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdhB,EAAS,CAAEH,KAAMkB,EAAMjB,QAASkB,KAyBlC,OACE,iCACE,eAAIC,UAAWC,EAAf,uBACA,kBAAMC,SAxBW,SAAAC,GACnBA,EAAEC,iBACFf,EAAUX,GACVa,GAAcc,EAAAA,EAAAA,IAAcf,IAC5BP,EAAS,CAAEH,KAAM,WAoBeoB,UAAWC,EAAzC,WACE,kBAAOK,QAAStB,EAAcgB,UAAWC,EAAzC,oBAGA,kBACErB,KAAK,QACLkB,KAAK,QACLS,QAAQ,gLACRC,MAAM,+FACNC,UAAQ,EACRV,MAAOrB,EAAMH,MACbmC,SAAUf,EACVgB,GAAI3B,EACJgB,UAAWC,KAEb,kBAAOK,QAASpB,EAAiBc,UAAWC,EAA5C,uBAGA,kBACErB,KAAK,OACLkB,KAAK,WAGLW,UAAQ,EACRV,MAAOrB,EAAMF,SACbkC,SAAUf,EACVgB,GAAIzB,EACJc,UAAWC,KAEb,gBAAKD,UAAWC,EAAhB,UACE,SAACW,EAAA,EAAD,CAAQJ,MAAM,QAAQ5B,KAAK,iBAI/B,SAAC,KAAD,CAAgBiC,UAAW,U,UC7FjC,EAXkB,YACHC,EAAAA,EAAAA,IAAYC,EAAAA,GAEzB,OACE,+BACE,SAAC,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginForm_title__GjtE0\",\"wrapper\":\"LoginForm_wrapper__ix+lI\",\"label\":\"LoginForm_label__sDosa\",\"input\":\"LoginForm_input__4nqqe\",\"btn__wrapper\":\"LoginForm_btn__wrapper__Vw7UI\"};","import React, { useReducer } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport s from './LoginForm.module.css';\r\nimport shortid from 'shortid';\r\nimport { useLoginUserMutation } from 'redux/auth/authApi';\r\nimport { myActionToken, loggedOn, loggedOut } from 'redux/auth/token-reduser';\r\nimport { getIsLogged, getToken } from 'redux/auth/token-selectors';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n};\r\nconst registerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'email':\r\n      return { ...state, email: action.payload };\r\n    case 'password':\r\n      return { ...state, password: action.payload };\r\n    case 'reset':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const [state, dispatch] = useReducer(registerReducer, initialState);\r\n\r\n  const emailInputId = shortid.generate();\r\n  const passwordInputId = shortid.generate();\r\n  const navigate = useNavigate();\r\n  const [\r\n    loginUser,\r\n    { data, isLoading: isLoadingULoginUser, isError: isErrorLoginUser },\r\n  ] = useLoginUserMutation();\r\n\r\n  const dispatchToken = useDispatch();\r\n\r\n  // записує в локальний стейт и`мя, пошту та пароль\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    dispatch({ type: name, payload: value });\r\n  };\r\n\r\n  // при натискання на кнопку локальний стейт передається як аргумент до функції addUser, форма очищується\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    loginUser(state);\r\n    dispatchToken(myActionToken(data));\r\n    dispatch({ type: 'reset' });\r\n  };\r\n\r\n  // const handleSubmit = async data => {\r\n  //   try {\r\n  //     // e.preventDefault();\r\n  //     const response = await loginUser(state);\r\n  //     console.log(response);\r\n  //     //   dispatchToken(myActionToken(response));\r\n  //     dispatchToken(loggedOn());\r\n  //     dispatch({ type: 'reset' });\r\n  //     navigate('/phonebook');\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Register</h1>\r\n      <form onSubmit={handleSubmit} className={s.wrapper}>\r\n        <label htmlFor={emailInputId} className={s.label}>\r\n          Email\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          pattern=\"([A-zА-я])+([0-9\\-_\\+\\.])*([A-zА-я0-9\\-_\\+\\.])*@([A-zА-я])+([0-9\\-_\\+\\.])*([A-zА-я0-9\\-_\\+\\.])*[\\.]([A-zА-я])+\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={state.email}\r\n          onChange={handleChange}\r\n          id={emailInputId}\r\n          className={s.input}\r\n        />\r\n        <label htmlFor={passwordInputId} className={s.label}>\r\n          Password\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={state.password}\r\n          onChange={handleChange}\r\n          id={passwordInputId}\r\n          className={s.input}\r\n        />\r\n        <div className={s.btn__wrapper}>\r\n          <Button title=\"Login\" type=\"submit\" />\r\n        </div>\r\n      </form>\r\n\r\n      <ToastContainer autoClose={2000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from 'components/LoginForm/LoginForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLogged } from 'redux/auth/token-selectors';\r\n\r\nconst LoginPage = () => {\r\n  const flag = useSelector(getIsLogged);\r\n\r\n  return (\r\n    <>\r\n      <LoginForm />\r\n    </>\r\n  );\r\n  // return <>{flag ? <h2>LoginPage</h2> : ''}</>;\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["initialState","email","password","registerReducer","state","action","type","payload","useReducer","dispatch","emailInputId","shortid","passwordInputId","useNavigate","useLoginUserMutation","loginUser","data","dispatchToken","isLoading","isError","useDispatch","handleChange","event","target","name","value","className","s","onSubmit","e","preventDefault","myActionToken","htmlFor","pattern","title","required","onChange","id","Button","autoClose","useSelector","getIsLogged"],"sourceRoot":""}