{"version":3,"file":"static/js/LoginPage.99b91277.chunk.js","mappings":"4QACA,EAAwB,yBAAxB,EAA2D,2BAA3D,EAA8F,yBAA9F,EAA+H,yBAA/H,EAAuK,gC,8ECYjKA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAENC,EAAkB,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACxD,OAAQA,EAAOC,MACb,IAAK,QACH,OAAO,kBAAKF,GAAZ,IAAmBH,MAAOI,EAAOE,UACnC,IAAK,WACH,OAAO,kBAAKH,GAAZ,IAAmBF,SAAUG,EAAOE,UACtC,IAAK,QACH,OAAOP,EACT,QACE,OAAOI,IA8Eb,EA1EkB,WAChB,OAA0BI,EAAAA,EAAAA,YAAWL,EAAiBH,GAAtD,eAAOI,EAAP,KAAcK,EAAd,KAEMC,EAAeC,IAAAA,WACfC,EAAkBD,IAAAA,WAClBE,GAAWC,EAAAA,EAAAA,MACjB,GAAoBC,EAAAA,EAAAA,MAAbC,GAAP,eAEMC,GAAgBC,EAAAA,EAAAA,MAGhBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdd,EAAS,CAAEH,KAAMgB,EAAMf,QAASgB,KAI5BC,EAAY,mCAAG,WAAMC,GAAN,kFACnBA,EAAEC,iBADiB,kBAGMV,EAAUZ,GAHhB,gBAGTuB,EAHS,EAGTA,KACAC,EAAUD,EAAVC,MACRX,GAAcY,EAAAA,EAAAA,IAAcD,IAC5BX,GAAca,EAAAA,EAAAA,OACdrB,EAAS,CAAEH,KAAM,UACjBO,EAAS,cARQ,kDAUjBkB,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,kCAXiB,0DAAH,sDAelB,OACE,iCACE,eAAIC,UAAWC,EAAf,oBACA,kBAAMC,SAAUZ,EAAcU,UAAWC,EAAzC,WACE,kBAAOE,QAAS3B,EAAcwB,UAAWC,EAAzC,oBAGA,kBACE7B,KAAK,QACLgB,KAAK,QACLgB,QAAQ,gLACRC,MAAM,+FACNC,UAAQ,EACRjB,MAAOnB,EAAMH,MACbwC,SAAUtB,EACVuB,GAAIhC,EACJwB,UAAWC,KAEb,kBAAOE,QAASzB,EAAiBsB,UAAWC,EAA5C,uBAGA,kBACE7B,KAAK,OACLgB,KAAK,WAGLkB,UAAQ,EACRjB,MAAOnB,EAAMF,SACbuC,SAAUtB,EACVuB,GAAI9B,EACJsB,UAAWC,KAEb,gBAAKD,UAAWC,EAAhB,UACE,SAACQ,EAAA,EAAD,CAAQJ,MAAM,QAAQjC,KAAK,iBAI/B,SAAC,KAAD,CAAgBsC,UAAW,UCzFjC,EARkB,WAChB,OACE,+BACE,SAAC,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginForm_title__GjtE0\",\"wrapper\":\"LoginForm_wrapper__ix+lI\",\"label\":\"LoginForm_label__sDosa\",\"input\":\"LoginForm_input__4nqqe\",\"btn__wrapper\":\"LoginForm_btn__wrapper__Vw7UI\"};","import React, { useReducer } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport s from './LoginForm.module.css';\r\nimport shortid from 'shortid';\r\nimport { useLoginUserMutation } from 'redux/auth/authApi';\r\nimport { myActionToken, loggedOn, loggedOut } from 'redux/auth/token-reduser';\r\nimport { getIsLogged, getToken } from 'redux/auth/token-selectors';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n};\r\nconst registerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'email':\r\n      return { ...state, email: action.payload };\r\n    case 'password':\r\n      return { ...state, password: action.payload };\r\n    case 'reset':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst LoginForm = () => {\r\n  const [state, dispatch] = useReducer(registerReducer, initialState);\r\n\r\n  const emailInputId = shortid.generate();\r\n  const passwordInputId = shortid.generate();\r\n  const navigate = useNavigate();\r\n  const [loginUser] = useLoginUserMutation();\r\n\r\n  const dispatchToken = useDispatch();\r\n\r\n  // записує в локальний стейт и`мя, пошту та пароль\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    dispatch({ type: name, payload: value });\r\n  };\r\n\r\n  // при натискання на кнопку локальний стейт передається як аргумент до функції loginUsers, форма очищується\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await loginUser(state);\r\n      const { token } = data;\r\n      dispatchToken(myActionToken(token));\r\n      dispatchToken(loggedOn());\r\n      dispatch({ type: 'reset' });\r\n      navigate('/phonebook');\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(`Somthing wrong during logining`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Login</h1>\r\n      <form onSubmit={handleSubmit} className={s.wrapper}>\r\n        <label htmlFor={emailInputId} className={s.label}>\r\n          Email\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          pattern=\"([A-zА-я])+([0-9\\-_\\+\\.])*([A-zА-я0-9\\-_\\+\\.])*@([A-zА-я])+([0-9\\-_\\+\\.])*([A-zА-я0-9\\-_\\+\\.])*[\\.]([A-zА-я])+\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={state.email}\r\n          onChange={handleChange}\r\n          id={emailInputId}\r\n          className={s.input}\r\n        />\r\n        <label htmlFor={passwordInputId} className={s.label}>\r\n          Password\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={state.password}\r\n          onChange={handleChange}\r\n          id={passwordInputId}\r\n          className={s.input}\r\n        />\r\n        <div className={s.btn__wrapper}>\r\n          <Button title=\"Login\" type=\"submit\" />\r\n        </div>\r\n      </form>\r\n\r\n      <ToastContainer autoClose={2000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from 'components/LoginForm/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <>\r\n      <LoginForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["initialState","email","password","registerReducer","state","action","type","payload","useReducer","dispatch","emailInputId","shortid","passwordInputId","navigate","useNavigate","useLoginUserMutation","loginUser","dispatchToken","useDispatch","handleChange","event","target","name","value","handleSubmit","e","preventDefault","data","token","myActionToken","loggedOn","console","log","toast","className","s","onSubmit","htmlFor","pattern","title","required","onChange","id","Button","autoClose"],"sourceRoot":""}